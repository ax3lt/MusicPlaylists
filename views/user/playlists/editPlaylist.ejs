<html>
<head>
    <%- include(global.appRoot + '/views/templates/global/header.ejs') %>
</head>
<body data-bs-theme="<%= global.theme %>">
<div class="container mt-5">
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Modifica playlist</h3>
        </div>
        <form action="/user/playlists/edit/<%= playlist._id %>" method="POST">
            <div class="card-body">
                <div class="mb-3 row">
                    <label class="col-2 col-form-label">ID</label>
                    <div class="col">
                        <input type="text" class="form-control" placeholder="<%= playlist._id %>"
                               value="<%= playlist._id %>" readonly disabled>
                        <small class="form-hint">L'identificatore della playlist.</small>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label class="col-2 col-form-label required">Titolo</label>
                    <div class="col">
                        <input type="text" class="form-control" placeholder="<%= playlist.title %>"
                               value="<%= playlist.title %>" name="playListName" required>
                        <small class="form-hint">Il titolo della playlist.</small>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label class="col-2 col-form-label required">Descrizione</label>
                    <div class="col">
                        <input type="text" class="form-control" placeholder="<%= playlist.description %>"
                               value="<%= playlist.description %>" name="playListDescription" required>
                        <small class="form-hint">La descrizione della playlist.</small>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label class="col-2 col-form-label">Playlist pubblica</label>
                    <div class="col">
                        <div>
                            <label class="form-check form-check-inline">
                                <input class="form-check-input"
                                       type="checkbox" <%= playlist.public === true ? 'checked' : '' %> name="public">
                            </label>
                        </div>
                    </div>
                </div>
                <hr>
                <div class="mb-3 row">
                    <label class="col-2 col-form-label">Canzoni</label>
                    <div class="col">
                        <div class="list-group card-list-group" id="songsList">
                            <% for(let i = 0; i < playlist.songsId.length; i++ ){
                                let year = playlist.songsReleaseDate[i].split('-')[0];
                            %>
                            <div class="list-group-item" id="song-<%= i %>">
                                <input type="hidden" name="songId[]" value="<%= playlist.songsId[i] %>">
                                <input type="hidden" name="songName[]" value="<%= playlist.songsName[i] %>">
                                <input type="hidden" name="songImage[]" value="<%= playlist.songsImage[i] %>">
                                <input type="hidden" name="songAuthor[]" value="<%= playlist.songsAuthor[i] %>">
                                <input type="hidden" name="songDuration[]" value="<%= playlist.songsDuration[i] %>">
                                <input type="hidden" name="songPreview[]" value="<%= playlist.songsPreview[i] %>">
                                <input type="hidden" name="songReleaseDate[]"
                                       value="<%= playlist.songsReleaseDate[i] %>">
                                <input type="hidden" name="songGenre[]" value="<%= playlist.songsGenre[i] %>">
                                <div class="row g-2 align-items-center">
                                    <div class="col-auto fs-3"><%= i + 1 %></div>
                                    <div class="col-auto">
                                        <a href="<%= playlist.songsImage[i] %>" target="_blank">
                                        <img src="<%= playlist.songsImage[i] %>" class="rounded"
                                             alt="<%= playlist.songsName[i] %>"
                                             width="40" height="40">
                                        </a>
                                    </div>
                                    <div class="col"><%= playlist.songsName[i] %>
                                        <div class="text-muted"><%= playlist.songsAuthor[i] %> - <%= year %>
                                            - <%= playlist.songsGenre[i] %></div>
                                    </div>
                                    <div class="col-auto text-muted">
                                        <%
                                        if(playlist.songsPreview[i] !== 'null'){
                                        %>
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                             class="icon icon-tabler icon-tabler-player-play p-0" width="24" height="24"
                                             style="color: var(--tblr-secondary-color)!important"
                                             viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none"
                                             stroke-linecap="round" stroke-linejoin="round"
                                             onclick="play(`<%= playlist.songsPreview[i] %>`)">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                            <path d="M7 4v16l13 -8z"></path>
                                        </svg>
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                             class="icon icon-tabler icon-tabler-player-pause p-0" width="24" height="24"
                                             style="color: var(--tblr-secondary-color)!important"
                                             viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none"
                                             stroke-linecap="round" stroke-linejoin="round"
                                             onclick="pause(`<%= playlist.songsPreview[i] %>`)">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                            <path d="M6 5m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v12a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"></path>
                                            <path d="M14 5m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v12a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"></path>
                                        </svg>
                                        &nbsp;
                                        <%
                                        }
                                        else {
                                        %>
                                            <svg xmlns="http://www.w3.org/2000/svg" onclick="noPreview()"
                                                 style="color: var(--tblr-secondary-color)!important"
                                                 class="icon icon-tabler icon-tabler-info-circle p-0" width="24" height="24"
                                                 viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none"
                                                 stroke-linecap="round" stroke-linejoin="round">
                                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                                <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0"></path>
                                                <path d="M12 9h.01"></path>
                                                <path d="M11 12h1v4h1"></path>
                                            </svg>
                                            &nbsp;
                                        <% } %>
                                        <%= playlist.songsDuration[i] %>
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                             class="icon icon-tabler icon-tabler-trash" width="40" height="40"
                                             viewBox="0 0 24 24" stroke-width="2" stroke="red" fill="none"
                                             stroke-linecap="round" stroke-linejoin="round"
                                             onclick="deleteMe(`song-<%= i %>`)">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                            <path d="M4 7l16 0"></path>
                                            <path d="M10 11l0 6"></path>
                                            <path d="M14 11l0 6"></path>
                                            <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"></path>
                                            <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"></path>
                                        </svg>
                                    </div>
                                </div>
                            </div>
                            <% } %>
                        </div>
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Nome della canzone"
                                   id="songSearchInput">
                            <button class="btn" type="button" id="songSearch">Aggiungi</button>
                        </div>
                    </div>
                </div>
                <hr>
                <div class="mb-3 row">
                    <label class="col-2 col-form-label">Tags</label>
                    <div class="col">
                        <div class="badges-list" id="tagsList">
                            <%
                            const colorArray = ["bg-blue", "bg-azure", "bg-indigo", "bg-purple", "bg-pink", "bg-red", "bg-orange", "bg-yellow", "bg-lime", "bg-green", "bg-teal", "bg-cyan"];
                            for(let i = 0; i < playlist.tags.length; i++ ){
                            %>
                                <span class="badge text-white <%= colorArray[Math.floor(Math.random() * colorArray.length)] %> d-flex">
                                <%= playlist.tags[i] %>
                                <input type="hidden" name="tag[]" value="<%= playlist.tags[i] %>">
                                <svg xmlns="http://www.w3.org/2000/svg"
                                     class="icon icon-tabler icon-tabler-trash" width="40" height="40"
                                     viewBox="0 0 24 24" stroke-width="2" stroke="white" fill="none"
                                     stroke-linecap="round" stroke-linejoin="round" onclick="removeTag(this)">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                    <path d="M4 7l16 0"></path>
                                    <path d="M10 11l0 6"></path>
                                    <path d="M14 11l0 6"></path>
                                    <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"></path>
                                    <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"></path>
                                </svg>
                            </span>

                            <% } %>
                        </div>
                        <br>
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Nome del tag"
                                   id="tagInput">
                            <button class="btn" type="button" id="tagAdd">Aggiungi</button>
                        </div>
                        <small class="form-hint">La lista dei tag definiti.</small>
                    </div>
                </div>
            </div>
            <div class="card-footer text-end">
                <a href="/user/playlists/view/<%= playlist._id %>" class="btn btn-danger">Annulla</a>
                <button type="submit" class="btn btn-primary">Modifica</button>
            </div>

            <!-- Contenitore player canzone -->
            <div id="canzone" hidden=""></div>
        </form>
    </div>
</div>
<div class="modal modal-blur fade" id="modal-scrollable" tabindex="-1" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Scelta canzoni</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Chiudi"></button>
            </div>
            <div class="modal-body">
                <div id="musicChooser" class="list-group card-list-group">
                    <pre class="bg-red" style="color: white">Nessuna canzone trovata</pre>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn me-auto" data-bs-dismiss="modal">Chiudi</button>
            </div>
        </div>
    </div>
</div>
<%- include(global.appRoot + '/views/templates/global/footer.ejs') %>
<script>

    var songList = [<% for(let i = 0; i < playlist.songsId.length; i++ ){ %><%= '`' + playlist.songsId[i] + '`,' %><% } %>];
    var tagsList = [<% for(let i = 0; i < playlist.tags.length; i++ ){ %><%= '`' + playlist.tags[i] + '`,' %><% } %>];
    var addedTag = 0;

    var songsCount = <%= playlist.songsId.length %>;

    var currentSong = null;

    function deleteMe(elementId) {
        if (songsCount === 1) {
            iziToast.error({
                title: 'Errore',
                iconUrl: '/images/error.png',
                message: 'La playlist deve contenere almeno una canzone.',
                position: 'topRight'
            });
            return;
        }

        var element = document.getElementById(elementId);


        if(element.querySelector("svg").getAttribute("onclick").includes(currentSong)){
            document.getElementById('audio').pause();
        }



        var songId = element.querySelector("input[name='songId[]']").value;
        songList.splice(songList.indexOf(songId), 1);
        element.remove()
        songsCount--;

        // Reset counter
        var parent = document.querySelectorAll(".list-group-item");
        var songsCounter = 1;
        for (var i = 0; i < parent.length; i++) {
            parent[i].querySelector(".fs-3").innerHTML = songsCounter++;
        }
    }

    let data = [];
    data['numero'] = songsCount + 1;


    $('#songSearch').on('click', function () {
        var search = $('#songSearchInput').val();
        var element = document.querySelector('#musicChooser');
        $.ajax({
            url: '/api/get-song',
            type: 'GET',
            data: {title: search},
            success: async function (songData) {
                // array of songs
                // show a popup with the list of songs
                // user selects one

                if (songData === null || songData === undefined || songData.statusCode === 404) {
                    iziToast.error({
                        iconUrl: '/images/error.png',
                        title: 'Errore',
                        message: 'Canzone non trovata',
                        position: 'topRight'
                    });
                    return;
                }

                if (songData.length > 0) {
                    $('#modal-report').modal('hide');
                    $('#modal-scrollable').modal('show');
                    $('#musicChooser').html('');
                } else {
                    iziToast.error({
                        iconUrl: '/images/error.png',
                        title: 'Errore',
                        message: 'Nessuna canzone trovata con questo nome',
                        position: 'topRight'
                    });
                    return;
                }

                for (var i = 0; i < songData.length; i++) {
                    data['songId'] = songData[i].id;
                    data['titolo'] = songData[i].name;
                    data['autore'] = songData[i].artists[0].name;
                    data['logo'] = songData[i].album.images[0].url;
                    data['durata'] = new Date(songData[i].duration_ms);
                    data['releaseDate'] = songData[i].album.release_date;
                    data['genre'] = await getGenre(data['autore']);
                    data['songPreview'] = songData[i].preview_url;
                    const releaseDate = data['releaseDate'];
                    const year = releaseDate.substring(0, 4);
                    data['durata'] = data['durata'].getMinutes() + ':' + (data['durata'].getSeconds() < 10 ? '0' + data['durata'].getSeconds() : data['durata'].getSeconds());
                    var song = `<div class="list-group-item">
    <div class="row g-2 align-items-center">
        <input type="hidden" name="songId[]" value="${data['songId']}">
        <input type="hidden" name="songName[]" value="${data['titolo']}">
        <input type="hidden" name="songImage[]" value="${data['logo']}">
        <input type="hidden" name="songAuthor[]" value="${data['autore']}">
        <input type="hidden" name="songDuration[]" value="${data['durata']}">
        <input type="hidden" name="songReleaseDate[]" value="${data['releaseDate']}">
        <input type="hidden" name="songGenre[]" value="${data['genre']}">
        <input type="hidden" name="songPreview[]" value="${data['songPreview']}">
        <div class="col-auto fs-3">${i + 1}</div>
        <div class="col-auto">

        <a href="${data['logo']}" target="_blank">
            <img src="${data['logo']}" class="rounded"
                                   alt="${data['titolo']}" width="40" height="40">
        </a></div>
        <div class="col">${data['titolo']}
        <div class="text-muted">${data['autore']} - ${year} - ${data['genre'] ?? 'Non definito'}</div>
        </div>
        <div class="col-auto text-muted">${data['durata']}</div>
        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-circle-plus g-1"
        width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"
        fill="none" stroke-linecap="round" stroke-linejoin="round"
        style="--tblr-gutter-y: 0.5rem !important;"
        onclick="addSong(this.parentNode)">
           <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
           <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0"></path>
           <path d="M9 12h6"></path>
           <path d="M12 9v6"></path>
        </svg>
    </div>
</div>`
                    element.insertAdjacentHTML('beforeend', song);
                }

            }
        });
    });


    async function addSong(element) {
        var destination = document.querySelector('#songsList');

        var id = element.querySelector('input[name="songId[]"]').value;
        var titolo = element.querySelector('input[name="songName[]"]').value;
        var autore = element.querySelector('input[name="songAuthor[]"]').value;
        var logo = element.querySelector('input[name="songImage[]"]').value;
        var durata = element.querySelector('input[name="songDuration[]"]').value;
        var releaseDate = element.querySelector('input[name="songReleaseDate[]"]').value;
        var genre = element.querySelector('input[name="songGenre[]"]').value;
        var songPreview = element.querySelector('input[name="songPreview[]"]').value;
        const year = releaseDate.substring(0, 4);


        if (songList.includes(id)) {
            iziToast.error({
                iconUrl: '/images/error.png',
                title: 'Errore',
                message: 'Canzone già aggiunta',
                position: 'topRight'
            });
            return;
        }

         var divId = Math.floor(Math.random() * 1000000);

         let withPreview = `
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                             class="icon icon-tabler icon-tabler-player-play p-0" width="24" height="24"
                                             style="color: var(--tblr-secondary-color)!important"
                                             viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none"
                                             stroke-linecap="round" stroke-linejoin="round"
                                             onclick="play('${songPreview}')">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                            <path d="M7 4v16l13 -8z"></path>
                                        </svg>
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                             class="icon icon-tabler icon-tabler-player-pause p-0" width="24" height="24"
                                             style="color: var(--tblr-secondary-color)!important"
                                             viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none"
                                             stroke-linecap="round" stroke-linejoin="round"
                                             onclick="pause('${songPreview}')">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                            <path d="M6 5m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v12a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"></path>
                                            <path d="M14 5m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v12a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"></path>
                                        </svg>
                                        &nbsp;
                    `;

                    let withOutPreview = `
                    <svg xmlns="http://www.w3.org/2000/svg" onclick="noPreview()"
                                             style="color: var(--tblr-secondary-color)!important"
                                             class="icon icon-tabler icon-tabler-info-circle p-0" width="24" height="24"
                                             viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none"
                                             stroke-linecap="round" stroke-linejoin="round">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                            <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0"></path>
                                            <path d="M12 9h.01"></path>
                                            <path d="M11 12h1v4h1"></path>
                                        </svg>
                                        &nbsp;
                    `;


                    var song = `<div class="list-group-item" id="song-${divId}">
                                    <div class="row g-2 align-items-center">
                                        <input type="hidden" name="songId[]" value="${id}">
                                        <input type="hidden" name="songName[]" value="${titolo}">
                                        <input type="hidden" name="songImage[]" value="${logo}">
                                        <input type="hidden" name="songAuthor[]" value="${autore}">
                                        <input type="hidden" name="songDuration[]" value="${durata}">
                                        <input type="hidden" name="songReleaseDate[]" value="${releaseDate}">
                                        <input type="hidden" name="songGenre[]" value="${genre}">
                                        <input type="hidden" name="songPreview[]" value="${songPreview}">
                                        <div class="col-auto fs-3">${songsCount + 1}</div>
                                        <div class="col-auto"><a href="${data['logo']}" target="_blank"><img src="${logo}" class="rounded"
                                                                   alt="${titolo}" width="40" height="40"></a></div>
                                        <div class="col">${titolo}
                                        <div class="text-muted">${autore} - ${year} - ${genre}</div>
                                        </div>
                                        <div class="col-auto text-muted">
                                                                        ${songPreview !== 'null' ? withPreview : withOutPreview}
                                                                        ${durata}
                                                                            <svg xmlns="http://www.w3.org/2000/svg"
                                                                                 class="icon icon-tabler icon-tabler-trash" width="40" height="40"
                                                                                 viewBox="0 0 24 24" stroke-width="2" stroke="red" fill="none"
                                                                                 stroke-linecap="round" stroke-linejoin="round" onclick="deleteMe('song-${divId}')">
                                                                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                                                                <path d="M4 7l16 0"></path>
                                                                                <path d="M10 11l0 6"></path>
                                                                                <path d="M14 11l0 6"></path>
                                                                                <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"></path>
                                                                                <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"></path>
                                                                            </svg>
                                                                    </div>
                                    </div>
                                </div>`

        iziToast.success({
            iconUrl: '/images/success.png',
            title: 'Successo',
            message: 'Canzone aggiunta',
            position: 'topRight'
        });

        songList.push(id);
        songsCount++;
        destination.insertAdjacentHTML('beforeend', song);
        $('#songSearchInput').val('');
        data['numero'] = data['numero'] + 1;
    }

    function removeTag(element) {
        let value = element.parentNode.querySelector("input[name='tag[]']").value;
        if (tagsList.length === 1) {
            iziToast.error({
                title: 'Errore',
                iconUrl: '/images/error.png',
                message: 'La playlist deve contenere almeno un tag.',
                position: 'topRight'
            });
            return;
        }
        element.parentNode.remove();
        tagsList.splice(tagsList.indexOf(value), 1);
    }

    $('#tagAdd').click(function () {
        let tag = $('#tagInput').val();
        if (tag.length <= 0)
            return;

        if (tagsList.includes(tag)) {
            iziToast.error({
                title: 'Errore',
                iconUrl: '/images/error.png',
                message: 'Tag già aggiunto.',
                position: 'topRight'
            });
            return;
        }

        const colorArray = ["bg-blue", "bg-azure", "bg-indigo", "bg-purple", "bg-pink", "bg-red", "bg-orange", "bg-yellow", "bg-lime", "bg-green", "bg-teal", "bg-cyan"];
        let tagElement = `<span class="badge text-white ${colorArray[Math.floor(Math.random() * colorArray.length)]}">
                                ${tag}
                                <input type="hidden" name="tag[]" value="${tag}">
                                <svg xmlns="http://www.w3.org/2000/svg"
                                     class="icon icon-tabler icon-tabler-trash" width="40" height="40"
                                     viewBox="0 0 24 24" stroke-width="2" stroke="white" fill="none"
                                     stroke-linecap="round" stroke-linejoin="round" onclick="removeTag(this)">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                    <path d="M4 7l16 0"></path>
                                    <path d="M10 11l0 6"></path>
                                    <path d="M14 11l0 6"></path>
                                    <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"></path>
                                    <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"></path>
                                </svg>
                            </span>`;
        $('#tagsList').append(tagElement);
        tagsList.push(tag);
        $('#tagInput').val('');
    });

    async function getGenre(autore) {
        const maxLength = 20;
        try {
            var genres = "";
            const artistData = await $.ajax({
                url: '/api/get-artist',
                type: 'GET',
                data: {name: autore},
            });

            for (let i = 0; i < artistData.artists.items[0].genres.length; i++) {
                genres += artistData.artists.items[0].genres[i] + ", ";
            }

            if (genres.length > maxLength) {
                genres = genres.substring(0, maxLength - 3) + "...";
            } else {
                genres = genres.substring(0, genres.length - 2);
            }

            return genres;
        } catch (error) {
            console.error(error);
            return "Non fornito";
        }
    }


    function play(link) {
        if (link === 'null') {
            iziToast.error({
                title: 'Errore',
                iconUrl: '/images/error.png',
                message: 'Non è possibile riprodurre questo brano.',
                position: 'topRight'
            });
            return;
        }
        currentSong = link;
        let selector = $('#canzone');
        let src = '';
        try {
            src = document.getElementById('audio').src;
        } catch (e) {
        }
        if (src === link) {
            document.getElementById('audio').play();
        } else {
            selector.html(`<audio id="audio" src="${link}" controls autoplay/>`);
        }
    }

    function pause(link) {
        if (link !== currentSong)
            return
        let audioElement = document.getElementById('audio');
        audioElement.pause();
    }

    function noPreview() {
        iziToast.info({
            title: 'Info',
            iconUrl: '/images/info.png',
            message: 'La preview di questo brano non è disponibile.',
            position: 'topRight'
        });
    }

</script>
</body>
</html>